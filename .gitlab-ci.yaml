stages:
  - build
  - release

variables:
  OUTPUT_DIR: "firmwares" # Ordner, in dem die kompilierten .bin-Dateien gesammelt werden

build_firmwares:
  stage: build
  image: esphome/esphome
  script:
    - mkdir -p $OUTPUT_DIR
    # Suche rekursiv nach allen .yaml-Dateien und kompiliere sie
    - find . -name "*.yaml" | while read -r yaml_file; do
        echo "Compiling $yaml_file";
        esphome compile "$yaml_file";
        # Verschiebe alle erzeugten .bin-Dateien in den Ausgabeordner
        cp .esphome/build/*/*.bin $OUTPUT_DIR/ || true;
      done
  artifacts:
    paths:
      - $OUTPUT_DIR/
    expire_in: 1 week

release_firmwares:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  dependencies:
    - build_firmwares
  script:
    - echo "Creating a release with the compiled firmware files."
  release:
    name: "Firmware Release $CI_COMMIT_SHORT_SHA"
    description: "Automatisch generierte Firmware f√ºr ESPHome"
    assets:
      links:
        - name: "Firmwares"
          url: "$CI_PROJECT_URL/-/jobs/$CI_JOB_ID/artifacts/file/$OUTPUT_DIR"
