#                                  _   _                 _  _               _
#                                 | \ | |               | |(_)             | |
#  __      ____      ____      __ |  \| |  ___  _ __  __| | _  _   _     __| |  ___
#  \ \ /\ / /\ \ /\ / /\ \ /\ / / | . ` | / _ \| '__|/ _` || || | | |   / _` | / _ \
#   \ V  V /  \ V  V /  \ V  V /_ | |\  ||  __/| |  | (_| || || |_| | _| (_| ||  __/
#    \_/\_/    \_/\_/    \_/\_/(_)|_| \_| \___||_|   \__,_||_| \__, |(_)\__,_| \___|
#                                                               __/ |
#                                                              |___/
#     Infos on https://www.Nerdiy.de/
#
#     This program is free software: you can redistribute it and/or modify
#     it under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     This program is distributed in the hope that it will be useful,
#     but WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#     GNU General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with this program.  If not, see <http://www.gnu.org/licenses/>.#
#     You can find additional infos about the licensing here: https://nerdiy.de/en/lizenz/
#

substitutions:
    name: "nerdiys-selfiy-ring"
    friendly_name: "SelfIY Ring"
  
    # security relevant definitions
    improv_password: "please_change_me"
    ap_password: "please_change_me"
    web_user: "NRDY"
    web_password: "please_change_me"
    ota_password: "please_change_me"
    http_request_ssl_verification: "False"
  
    # GPIO pin definitions
    gpio_led_strip: "GPIO05"
    gpio_touch_sensor_minus: "GPIO08"
    gpio_touch_sensor_plus: "GPIO07"
  
    # Other definitions
    log_level: "INFO"
    touch_sensors_setup_mode: "False"
  
  esphome:
    name: "${name}"
    friendly_name: "${friendly_name}"
    name_add_mac_suffix: true
    min_version: "2024.10.0"
  
    project:
      name: nerdiy.selfiy-ring
      version: "1.0.0"
  
    on_boot: 
      - priority: 600
        then:
          - light.turn_on:
              id: light_1
              effect: none
              brightness: 40%
              red: 100%
              green: 0%
              blue: 0%
  
      - priority: -100
        then:
          - light.turn_on:
              id: light_1
              effect: none
              brightness: 40%
              red: 0%
              green: 100%
              blue: 0%
          - delay: 1s
          - light.turn_on:
              id: light_1
              effect: none
              brightness: 40%
              red: 100%
              green: 100%
              blue: 100%
          - light.turn_off:
              id: light_1
  
  esp32:
    board: esp32-s3-devkitc-1
    framework:
      type: arduino
  
  # Enable logging
  logger:
    level: "${log_level}"
  
  # Enable Home Assistant API
  api:
  
  ota:
    - platform: esphome
      password: "${ota_password}"  
    - platform: http_request
      id: ota_http_request
  
  http_request:
    verify_ssl: "${http_request_ssl_verification}"
  
  wifi:
    ap:
      password: "${ap_password}"
  
  captive_portal:
  
  esp32_touch:
    setup_mode: "${touch_sensors_setup_mode}"
    measurement_duration: 0.25ms
  
  improv_serial:
  
  esp32_improv:
    authorizer: basic
    password: "${improv_password}"
      
  web_server:
    port: 80
    version: 3
    auth:
      username: "${web_user}"
      password: "${web_password}"
  
  interval:
    - interval: 500ms
      then:
        - if:
            condition:
              and:
                - binary_sensor.is_on: touch_sensor_plus
            then: 
              - light.dim_relative:
                  id: light_1
                  relative_brightness: 10%
                  transition_length: 0.1s
                  brightness_limits:
                    max_brightness: 100%
                    min_brightness: 15%
        - if:
            condition:
              and:
                - binary_sensor.is_on: touch_sensor_minus
            then: 
              - light.dim_relative:
                  id: light_1
                  relative_brightness: -10%
                  transition_length: 0.1s
                  brightness_limits:
                    max_brightness: 100%
                    min_brightness: 15%
  
  text_sensor:
    - platform: version
      name: "ESPHome Version"
  
    - platform: wifi_info
      ip_address:
        name: ESP IP Address
      ssid:
        name: ESP Connected SSID
      bssid:
        name: ESP Connected BSSID
      mac_address:
        name: ESP Mac Wifi Address
      scan_results:
        name: ESP Latest Scan Results
  
  
  binary_sensor:
      
    - platform: esp32_touch
      name: "Touch sensor +"
      id: touch_sensor_plus
      pin: ${gpio_touch_sensor_plus}
      threshold: 500000
      on_press:
        then:
          - light.dim_relative:
              id: light_1
              relative_brightness: 10%
              transition_length: 0.1s
              brightness_limits:
                max_brightness: 100%
                min_brightness: 15%
      filters:
        - delayed_on: 50ms
      
    - platform: esp32_touch
      name: "Touch sensor -"
      id: touch_sensor_minus
      pin: ${gpio_touch_sensor_minus}
      threshold: 500000
      on_press:
        then:
          - light.dim_relative:
              id: light_1
              relative_brightness: -10%
              transition_length: 0.1s
              brightness_limits:
                max_brightness: 100%
                min_brightness: 15%
      filters:
        - delayed_on: 50ms
  
  sensor:
    - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
      name: "WiFi Signal dB"
      id: wifi_signal_db
      update_interval: 60s
      entity_category: "diagnostic"
  
    - platform: copy # Reports the WiFi signal strength in %
      source_id: wifi_signal_db
      name: "WiFi Signal Percent"
      filters:
        - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
      unit_of_measurement: "Signal %"
      entity_category: "diagnostic"
  
    - platform: uptime
      name: Uptime
      entity_category: "diagnostic"
  
  button:
    - platform: restart
      name: "Restart ESP"
  
  light:
    - platform: neopixelbus
      restore_mode: RESTORE_DEFAULT_ON
      id: light_1
      type: GRB
      variant: sk6812
      pin: ${gpio_led_strip}
      num_leds: 65
      name: "Ring Light"
      default_transition_length: 500ms      
      effects:
        - random:
        - pulse:
        - strobe:
        - flicker:
        - addressable_rainbow:
        - addressable_color_wipe:
        - addressable_scan:
        - addressable_twinkle:
        - addressable_random_twinkle:
        - addressable_fireworks:
        - addressable_flicker: